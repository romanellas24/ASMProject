apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-restaurant
  labels:
    app: app-restaurant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-restaurant
  template:
    metadata:
      labels:
        app: app-restaurant
    spec:
      initContainers:
        - name: wait-for-rabbit
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z $RABBIT_HOST $RABBIT_PORT; do echo "Waiting for RabbitMQ..."; sleep 2; done']
          env:
            - name: RABBIT_HOST
              valueFrom:
                configMapKeyRef:
                  name: restaurant-app-cm
                  key: rabbitHost
            - name: RABBIT_PORT
              valueFrom:
                configMapKeyRef:
                  name: restaurant-app-cm
                  key: rabbitPort
      containers:
        - name: app-restaurant
          image: tiesta/asm_restaurant_app:0.15
          imagePullPolicy: IfNotPresent
          ports:
            - name: all
              containerPort: 8080
          env:
            - name: RABBIT_HOST
              valueFrom:
                configMapKeyRef:
                  name: restaurant-app-cm
                  key: rabbitHost
            - name: RABBIT_PORT
              valueFrom:
                configMapKeyRef:
                  name: restaurant-app-cm
                  key: rabbitPort
            - name: RABBIT_USER
              valueFrom:
                configMapKeyRef:
                  name: restaurant-app-cm
                  key: rabbitUser
            - name: RABBIT_PSSWD
              valueFrom:
                secretKeyRef:
                  name: restaurant-secrets
                  key: rabbitPsswd
            - name: BE_URL
              valueFrom:
                configMapKeyRef:
                  name: restaurant-app-cm
                  key: backendUrl
            - name: LOCAL_NAME
              valueFrom:
                configMapKeyRef:
                  name: restaurant-app-cm
                  key: localName
